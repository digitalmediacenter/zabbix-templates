#!/usr/bin/perl -w
# Check peer certificate validity
# returns the days left to expiry.
# If connection fails, 1295568000 is returned
# Based on a script from http://sslexpire.home-dn.net/src/sslexpire-0.6.2/
# Usage: ssl.expiry.pl <HOST> <PORT>, Port is optinal, 443 is default

use strict;
use IO::Socket;
use Net::SSLeay;
use Getopt::Long;
use Date::Parse;
use warnings;

Net::SSLeay::SSLeay_add_ssl_algorithms();
Net::SSLeay::randomize();

my $opensslpath = "/usr/bin/openssl";

my $host = shift();
my $port = shift();
my $expdate = 0;

if (!defined $host){
   print "$0 <host> [<port>]\n"; 
   exit(1);
}

if (!defined $port){
   $port = 443;
}
my $days_left = 0;
my $expiry_timestamp = 0;

# Connect to $host:$port
my $socket = IO::Socket::INET->new(Proto => "tcp",PeerAddr => $host,PeerPort => $port);
# If we connected successfully
if ($socket){
    # Intiate ssl
    my $ctx = Net::SSLeay::CTX_new();
    my $ssl = Net::SSLeay::new($ctx);
    Net::SSLeay::set_fd($ssl, fileno($socket));
    my $res = Net::SSLeay::connect($ssl);
    # Get peer certificate
    my $x509 = Net::SSLeay::get_peer_certificate($ssl);
    if ($x509) {
        my $string = Net::SSLeay::PEM_get_string_X509($x509);
        # Get the expiration date, using openssl
        ($expdate) = split(/\n/, `echo "$string" | $opensslpath x509 -enddate -subject -noout 2>&1`);
        $expdate =~ s/.*=//;
        chomp($expdate);
    }
    # Close and cleanup
    Net::SSLeay::free($ssl);
    Net::SSLeay::CTX_free($ctx);
    close $socket;
}
$expiry_timestamp = str2time($expdate)."\n";
$days_left        = ($expiry_timestamp-time())/86400;
print int($days_left)."\n";
